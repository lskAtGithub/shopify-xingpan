<section class="get-report-section">
  <div class="report-container">
    <div class="bg-gradient-to-br">
      <div class="flex-wrap">
        
        <!-- 左侧内容 -->
        <div class="left-content">
          {% if section.settings.heading != blank %}
            <h2>{{ section.settings.heading }}</h2>
          {% endif %}

          {% if section.settings.subheading != blank %}
            <p>{{ section.settings.subheading }}</p>
          {% endif %}

          <div class="note-line">
            <i class="fa fa-star"></i>
            <p>{{ section.settings.note_text }}</p>
          </div>

          {% if section.settings.top_image != blank %}
            <div class="top-img-container">
              <img src="{{ section.settings.top_image | image_url: width: 800 }}" alt="{{ section.settings.heading }}" class="top-img">
            </div>
          {% endif %}
        </div>

        <!-- 右侧表单 -->
        <div class="form-container">
          <form method="post" action="#">
            <div class="form-group">
              <label for="name">Full Name <span class="required">*</span></label>
              <input type="text" id="name" name="name" placeholder="Enter your full name" required>
            </div>

            <div class="form-group">
              <label>Birth Date & Time <span class="required">*</span></label>
              <div class="grid-cols-3">
                <div>
                  <label for="birth-year">Year</label>
                  <input type="number" id="birth-year" name="birth_year" min="1900" max="2023" placeholder="YYYY" required>
                </div>
                <div>
                  <label for="birth-month">Month</label>
                  <select id="birth-month" name="birth_month" required>
                    <option value="">Select</option>
                    {% for m in (1..12) %}
                      <option value="{{ "%02d" | format: m }}">{{ m | date: "%B" }}</option>
                    {% endfor %}
                  </select>
                </div>
                <div>
                  <label for="birth-day">Day</label>
                  <input type="number" id="birth-day" name="birth_day" min="1" max="31" placeholder="DD" required>
                </div>
              </div>

              <div class="grid-cols-2">
                <div>
                  <label for="birth-hour">Hour (24h)</label>
                  <input type="number" id="birth-hour" name="birth_hour" min="0" max="23" placeholder="HH" required>
                </div>
                <div>
                  <label for="birth-minute">Minute</label>
                  <input type="number" id="birth-minute" name="birth_minute" min="0" max="59" placeholder="MM" required>
                </div>
              </div>
            </div>

            <!-- 出生地选择器 -->
            <div class="form-group">
              <label>Birth Location <span class="required">*</span></label>
              <div class="grid-cols-3">
                <div>
                  <label for="country">Country</label>
                  <select id="country" name="country" required>
                    <option value="">Select Country</option>
                    <option value="usa">United States</option>
                    <option value="uk">United Kingdom</option>
                    <option value="cn">China</option>
                  </select>
                </div>
                <div>
                  <label for="state">State/Province</label>
                  <select id="state" name="state" disabled required>
                    <option value="">Select State/Province</option>
                  </select>
                </div>
                <div>
                  <label for="city">City</label>
                  <select id="city" name="city" disabled required>
                    <option value="">Select City</option>
                  </select>
                </div>
              </div>
            </div>

            <div class="form-group">
              <label class="checkbox-label">
                <input type="checkbox" id="daylight-saving" name="daylight_saving">
                <span>Daylight Saving Time was in effect at birth</span>
              </label>
            </div>

            <button type="submit" class="gradient-btn">
              <span>{{ section.settings.button_text }}</span>
              <i class="fa fa-arrow-right"></i>
            </button>
          </form>
        </div>
      </div>
    </div>
  </div>


  <script>
    document.addEventListener('DOMContentLoaded', function() {
      const countrySelect = document.getElementById('country');
      const stateSelect = document.getElementById('state');
      const citySelect = document.getElementById('city');

      function resetSelect(select, placeholder) {
        select.innerHTML = `<option value="">${placeholder}</option>`;
        select.disabled = true;
      }

      function populateSelect(select, items, valueKey = 'name', labelKey = 'name') {
        items.forEach(item => {
          const option = document.createElement('option');
          option.value = item[valueKey] || item;
          option.textContent = item[labelKey] || item;
          select.appendChild(option);
        });
        select.disabled = false;
      }

      // 初始化
      resetSelect(stateSelect, 'Select State/Province');
      resetSelect(citySelect, 'Select City');

      // 先加载 JSON 数据
      fetch('{{ "countries+states+cities.json" | asset_url }}')
        .then(res => res.json())
        .then(data => {
          // 填充国家
          populateSelect(countrySelect, data, 'iso2', 'country');

          // 国家变化
          countrySelect.addEventListener('change', function() {
            const selected = data.find(c => c.iso2 === this.value);
            resetSelect(stateSelect, 'Select State/Province');
            resetSelect(citySelect, 'Select City');
            if (selected && selected.states) {
              populateSelect(stateSelect, selected.states, 'state_code', 'name');
            }
          });

          // 州变化
          stateSelect.addEventListener('change', function() {
            const country = data.find(c => c.iso2 === countrySelect.value);
            const state = country?.states.find(s => s.state_code === this.value);
            resetSelect(citySelect, 'Select City');
            if (state && state.cities) {
              populateSelect(citySelect, state.cities, null, null); // cities 是字符串数组
            }
          });
        })
        .catch(err => console.error('加载地区数据失败:', err));
    });
  </script>


  {% schema %}
  {
    "name": "Get Report Section",
    "settings": [
      {"type": "text", "id": "heading", "label": "标题", "default": "Discover Your Elemental Energy"},
      {"type": "textarea", "id": "subheading", "label": "副标题/描述", "default": "Uncover your strongest & weakest elements—find your perfect crystal art to balance your energy."},
      {"type": "text", "id": "note_text", "label": "提示文字", "default": "Free personalized report for first-time visitors"},
      {"type": "image_picker", "id": "top_image", "label": "顶部图片"},
      {"type": "text", "id": "button_text", "label": "按钮文字", "default": "Get Your Free Mini Report"}
    ],
    "presets": [{"name": "Get Report Section", "category": "Custom"}]
  }
  {% endschema %}
</section>
